name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.22
        cache: false
    
    - name: Run tests
      run: go test -v ./...
    
    - name: Run race detector
      run: go test -race -short ./...
    
    - name: Build UDF binary
      run: go build -o bin/bpuf-clickhouse ./cmd/bpuf-clickhouse
    
    - name: Test UDF directly
      run: |
        echo '{"a": "user1", "b": "user2"}' | ./bin/bpuf-clickhouse --mode=unionfind
        echo '{"u": "x1", "v": "c1"}' | ./bin/bpuf-clickhouse --mode=bipartite
    
    - name: Test XML generation
      run: ./bin/bpuf-clickhouse --udf-xml
      shell: bash

  build:
    name: Build releases
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.22
        cache: false
    
    - name: Build multiplatform binaries
      run: |
        mkdir -p dist
        
        # Linux amd64
        GOOS=linux GOARCH=amd64 go build -o dist/bpuf-clickhouse-linux-amd64 ./cmd/bpuf-clickhouse
        
        # Linux arm64
        GOOS=linux GOARCH=arm64 go build -o dist/bpuf-clickhouse-linux-arm64 ./cmd/bpuf-clickhouse
        
        # macOS amd64
        GOOS=darwin GOARCH=amd64 go build -o dist/bpuf-clickhouse-darwin-amd64 ./cmd/bpuf-clickhouse
        
        # macOS arm64 (Apple Silicon)
        GOOS=darwin GOARCH=arm64 go build -o dist/bpuf-clickhouse-darwin-arm64 ./cmd/bpuf-clickhouse
        
        # Verify files were created
        ls -la dist/
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: bpuf-clickhouse-binaries
        path: dist/
        retention-days: 30

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.22
        cache: false
    
    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v8
      with:
        version: latest
